// This setup uses Hardhat Ignition to manage smart contract deployments.
// Learn more about it at https://hardhat.org/ignition

import { buildModule } from "@nomicfoundation/hardhat-ignition/modules";

const _andrew = {
    secretKey: 6875160707115294089928404856982855399501967374313450825124411711277608097292n,
    publicKey: {
        x: 93511860258162638141011999956867032901232146735184332357793004911272556789229n,
        y: 25977141122028315417310117121445402422663001674017258907696947079392813884555n,
    }
}

const _penyu = {
    secretKey: 46978390914595585661117372515527762560111867667730705342839159526684642795802n,
    publicKey: {
        x: 59508555324738974928730321050303513126687994192478985192235720110139867733250n,
        y: 113211108833453438331231115946973857775862748594833760413266362283631534541558n,
    }
}

const andrew = {
    publicKey: _andrew.publicKey,
    proof: {
        c: 2205983025151954609624374838826385137125583755568107128321639872616313727958n,
        d: 96132882629232528788423054073698498508703241511632104686757007313089666857400n,
    }
}

const penyu = {
    publicKey: _penyu.publicKey,
    proof: {
        c: 44507824449075019685418239025217718912472188658562651897814566605067164599470n,
        d: 83935123816820801615031768717279165148501198823044272406450059898056133776413n,
    }
}


export default buildModule("ElectionModule", (m) => {
    const election = m.contract("Election", [[andrew, penyu], ["Ferry", "Valen", "Ruben"]]);

    return { election };
});
